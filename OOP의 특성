<< OOP(Object-oriented programming) : 객체지향프로그램 >>
- 특징
  (1) 캡슐화(encapsulation) : 객체 안에는 데이터들이 저장되어있고, 그 데이터를 프로그램 코드로 보호하는 것.
    -상태와 행위의 캡슐화 (데이터 캡슐화)
    -사적인 비밀의 캡슐화 (은닉화)
  (2) 다형성(polymorphism) : 하나의 인터페이스에 여러 실제적인 구현을 다을 수 있는 것. (one interface, multiple methods)
                             같은 이름의 메소드가 클래스 혹은 객체에 따라 다르게 동작하도록 구현된다.
     -오버라이딩(overriding) : 슈퍼 클래스에 구현된 메소드를, 서브 클래스에서 동일한 이름으로 자신의 특징에 맞게 다시 구현한다.
     -오버로딩(overloading): 클래스 내에서 이름이 같지만 서로 다르게 동작하는 메소드를 여러 개 만드는 메소드이다.
  (3) 상속(inheritnace) : 자바의 클래스들은 계층 구조를 갖고 모든 객체가 자기의 상위클래스 코드를 사용할 수 있다.
                          즉, 상위 클래스 내용을 상속받아서 사용할 수 있도록 하는 것.
  (4) 추상화(abstraction) : 실생활에 존재하는 객체들을 프로그램 코드로 표현하기 위해서 객체들의 공통된 특성들을 파악하고 일반화된 코드로 나타낸 것.
                            추상적인 것들을 구체적으로 모델링 하는 모든 과정 = 객체를 만드는 모든 과정

