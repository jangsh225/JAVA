<<클래스의 구성요소>>
: 필드, 메서드, 생성자

1. 필드(Field) : 클래스에 포함된 변수(variable), 클래스 변수와 인스턴스 변수는 초기화를 하지 않아도 변수의 타입에 맞게 자동으로 초기화된다. 
                 하지만 지역 변수는 사용하기 전에 초기화하지 않으면 오류가 발생한다.
 (1) 클래스 변수(static variable) : 클래스 영역에 위치한 변수 중에서 static 키워드를 가지는 변수
 (2) 인스턴스 변수(instance variable) :  클래스 영역에 위치한 변수 중 static 키워드를 가지지 않는 변수
 (3) 지역 변수(local variable) : 메소드나 생성자, 초기화 블록 내에 위치한 변수
 ex) class CsEx {
 
    static int stV; // 클래스 변수

    String isV;       // 인스턴스 변수
    
    void method() {

        int lcV = 10; // 지역 변수

    }

}

2. 메서드(Method) : 클래스 내의 함수, 클래스 네임과 달리 메서드 네임은 소문자로 시작해도 된다.
- 문법
  접근제어자 반환타입 메소드이름(매개변수목록) { // 선언부
      // 구현부
  }
  (1) 접근 제어자 : 해당 메소드에 접근할 수 있는 범위
  (2) 반환 타입(return type) : 메소드가 모든 작업을 마치고 반환하는 데이터의 타입
  (3) 메소드 이름 : 메소드를 호출하기 위한 이름
  (4) 매개변수 목록(parameters) : 메소드 호출 시에 전달되는 인수의 값을 저장할 변수들
  (5) 구현부 : 메소드의 고유 기능을 수행하는 명령문의 집합

3. 생성자(constructor) : 객체의 생성과 동시에 인스턴스 변수를 원하는 값으로 초기화할 수 있다. 단, 생성자(constructor)의 이름은 해당 클래스의 이름과 같아야 한다.
- 특징 
  (1) 생성자는 반환값이 없지만, 반환 타입을 void형으로 선언하지 않는다.
  (2) 생성자는 초기화를 위한 데이터를 인수로 전달받을 수 있다.
  (3) 객체를 초기화하는 방법이 여러 개 존재할 경우에는 하나의 클래스가 여러 개의 생성자를 가질 수 있습니다.
      즉, 생성자도 하나의 메소드이므로, 오버로딩이 가능하다.
  (4) 자바 컴파일러는 컴파일 시 클래스에 생성자가 하나도 정의되어 있지 않으면, 자동으로 다음과 같은 기본 생성자를 추가한다. 
      기본 생성자는 어떠한 매개변수도 전달받지 않으며, 기본적으로 아무런 동작도 하지 않는다. 
      단, 매개변수를 가지는 생성자를 하나라도 정의했다면, 기본 생성자는 자동으로 추가되지 않는다.
      따라서 매개변수를 가지는 생성자를 하나 이상 정의한 후 기본 생성자를 호출하면, 오류가 발생한다.
- 선언방법
  (1) 클래스이름() { ... }                  // 매개변수가 없는 생성자 선언
  (2) 클래스이름(인수1, 인수2, ...) { ... } // 매개변수가 있는 생성자 선언
